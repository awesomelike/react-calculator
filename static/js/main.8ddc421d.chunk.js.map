{"version":3,"sources":["actions/input.js","util/bracket.js","util/operation.js","components/OperationButton.jsx","context/inputContext.js","serviceWorker.js","components/NumberButton.jsx","components/Buffer.jsx","components/Calculator.jsx","components/Photographer.jsx","reducers/inputReducer.js","util/api.js","components/App.jsx","index.js","context/bufferContext.js"],"names":["appendSymbol","symbol","type","eraseOne","setInput","string","clearInput","isValid","input","openBrackets","match","closedBrackets","length","countOpenBrackets","countClosedBrackets","isOperation","includes","OperationButton","operation","useContext","InputContext","dispatchInput","setOperationClicked","equalClicked","setEqualClicked","BufferContext","setBuffer","handleClick","lastChar","slice","isPaired","parseInt","substring","inputLength","validInput","fillBracketsCount","i","expression","replace","eval","error","onClick","value","className","defaultProps","React","createContext","Boolean","window","location","hostname","NumberButton","number","Buffer","buffer","props","useSpring","from","opacity","marginTop","to","config","duration","p","style","Calculator","id","src","alt","Photographer","photographer","href","links","html","name","inputReducer","state","action","trim","stateLength","require","apiUrl","process","defaultImage","App","useReducer","useState","operationClicked","background","setBackground","setPhotographer","transitions","useTransition","enter","leave","molasses","useEffect","storedImage","JSON","parse","localStorage","getItem","setItem","stringify","a","Promise","resolve","reject","axios","get","then","photoUrl","data","urls","user","download_location","catch","regular","Provider","map","key","div","backgroundImage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.8ddc421d.chunk.js","sourcesContent":["export const appendSymbol = (symbol) => ({\r\n  type: 'APPEND_SYMBOL',\r\n  symbol,\r\n});\r\n\r\nexport const eraseOne = () => ({\r\n  type: 'ERASE_ONE',\r\n});\r\n\r\nexport const setInput = (string) => ({\r\n  type: 'SET_INPUT',\r\n  string,\r\n});\r\n\r\nexport const clearInput = () => ({\r\n  type: 'CLEAR_INPUT',\r\n});\r\n","const isValid = (input) => {\r\n  const openBrackets = `${input}`.match(/[(]/g);\r\n  const closedBrackets = `${input}`.match(/[)]/g);\r\n  if (!openBrackets) return true;\r\n  if (!!openBrackets && !!closedBrackets) return openBrackets.length === closedBrackets.length;\r\n  return false;\r\n};\r\n\r\nconst countOpenBrackets = (input) => `${input}`.match(/[(]/g).length;\r\nconst countClosedBrackets = (input) => {\r\n  const match = `${input}`.match(/[)]/g);\r\n  return (match !== null ? match.length : 0);\r\n};\r\nexport { isValid as default, countOpenBrackets, countClosedBrackets };\r\n","const isOperation = (symbol) => ['+', '-', '×', '/'].includes(symbol);\r\n\r\nexport { isOperation as default };\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputContext from '../context/inputContext';\r\nimport BufferContext from '../context/bufferContext';\r\nimport { appendSymbol, setInput, eraseOne } from '../actions/input';\r\nimport isOperation from '../util/operation';\r\nimport isValid, { countOpenBrackets, countClosedBrackets } from '../util/bracket';\r\n\r\nconst OperationButton = ({ operation }) => {\r\n  const {\r\n    input, dispatchInput, setOperationClicked, equalClicked, setEqualClicked,\r\n  } = useContext(InputContext);\r\n  const { setBuffer } = useContext(BufferContext);\r\n\r\n  const handleClick = () => {\r\n    if (equalClicked) {\r\n      setEqualClicked(false);\r\n      setBuffer('');\r\n    }\r\n    const lastChar = `${input}`.slice(-1);\r\n    if (operation === '⌫') {\r\n      dispatchInput(eraseOne());\r\n    } else if (operation === '( )') {\r\n      const isPaired = isValid(input);\r\n      if (input === '0') dispatchInput(setInput('('));\r\n      else if (lastChar === '(') dispatchInput(appendSymbol('('));\r\n      else if (isPaired && (isOperation(lastChar) || lastChar === '(')) {\r\n        dispatchInput(appendSymbol('('));\r\n      } else if (isPaired && (!isOperation(lastChar) || lastChar === ')')) {\r\n        dispatchInput(appendSymbol('×('));\r\n      } else if (!isPaired) dispatchInput(appendSymbol(')'));\r\n    } else if (operation === '+/-') {\r\n      if (input === '0') dispatchInput(setInput('(-'));\r\n      else if (parseInt(input, 10) < 0) dispatchInput(setInput(`${-1 * parseInt(input, 10)}`));\r\n      else if (input === '(-') dispatchInput(setInput('0'));\r\n      else if (isOperation(lastChar) || lastChar === '(') dispatchInput(appendSymbol('(-'));\r\n      else dispatchInput(setInput(`(-${input}`));\r\n    } else {\r\n      if (operation !== '=') {\r\n        if (isOperation(lastChar) && lastChar !== operation) {\r\n          dispatchInput(setInput(input.substring(0, input.length - 1) + operation));\r\n        } else if (!isOperation(lastChar)) {\r\n          dispatchInput(appendSymbol(operation));\r\n        }\r\n      } else {\r\n        const inputLength = input.length;\r\n        let validInput;\r\n        if (isOperation(input[inputLength - 1])) {\r\n          validInput = input.substring(0, inputLength - 1);\r\n        } else validInput = input;\r\n        if (!isValid(input)) {\r\n          const fillBracketsCount = countOpenBrackets(input) - countClosedBrackets(input);\r\n          for (let i = 0; i < fillBracketsCount; i += 1) validInput += ')';\r\n        }\r\n        setBuffer(`${validInput}=`);\r\n\r\n        const expression = `${validInput}`.replace(/[×]/g, '*');\r\n\r\n        try {\r\n          dispatchInput(setInput(eval(expression)));\r\n        } catch (error) {\r\n          dispatchInput(setInput('Wrong format!'));\r\n        }\r\n        setEqualClicked(true);\r\n      }\r\n      setOperationClicked(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <td>\r\n      <input\r\n        type=\"button\"\r\n        onClick={handleClick}\r\n        value={operation}\r\n        className={operation !== '+/-' ? 'num-button operation' : 'num-button'}\r\n      />\r\n    </td>\r\n  );\r\n};\r\n\r\nOperationButton.defaultProps = {\r\n  operation: '+',\r\n};\r\n\r\nOperationButton.propTypes = {\r\n  operation: PropTypes.string,\r\n};\r\n\r\nexport { OperationButton as default };\r\n","import React from 'react';\r\n\r\nconst InputContext = React.createContext();\r\n\r\nexport { InputContext as default };\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputContext from '../context/inputContext';\r\nimport BufferContext from '../context/bufferContext';\r\nimport { appendSymbol, clearInput } from '../actions/input';\r\n\r\nconst NumberButton = ({ number }) => {\r\n  const { dispatchInput, equalClicked, setEqualClicked } = useContext(InputContext);\r\n  const { setBuffer } = useContext(BufferContext);\r\n  const handleClick = () => {\r\n    if (equalClicked) {\r\n      dispatchInput(clearInput());\r\n      setBuffer('');\r\n      dispatchInput(appendSymbol(`${number}`));\r\n      setEqualClicked(false);\r\n    } else {\r\n      dispatchInput(appendSymbol(`${number}`));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <td>\r\n      <input\r\n        type=\"button\"\r\n        onClick={handleClick}\r\n        value={number}\r\n        className=\"num-button\"\r\n      />\r\n    </td>\r\n  );\r\n};\r\n\r\nNumberButton.propTypes = {\r\n  number: PropTypes.number,\r\n};\r\n\r\nNumberButton.defaultProps = {\r\n  number: 0,\r\n};\r\n\r\nexport { NumberButton as default };\r\n","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Buffer = ({ buffer }) => {\r\n  const props = useSpring({\r\n    from: { opacity: 0, marginTop: -50 },\r\n    to: { opacity: 1, marginTop: -20 },\r\n    config: { duration: 250 },\r\n  });\r\n  return <td><animated.p className=\"buffer\" style={props}>{buffer}</animated.p></td>;\r\n};\r\n\r\nBuffer.defaultProps = {\r\n  buffer: '',\r\n};\r\n\r\nBuffer.propTypes = {\r\n  buffer: PropTypes.string,\r\n};\r\nexport { Buffer as default };\r\n","import React, { useContext } from 'react';\r\nimport NumberButton from './NumberButton';\r\nimport OperationButton from './OperationButton';\r\nimport Buffer from './Buffer';\r\nimport InputContext from '../context/inputContext';\r\nimport BufferContext from '../context/bufferContext';\r\nimport { clearInput } from '../actions/input';\r\n\r\nconst Calculator = () => {\r\n  const { input, dispatchInput } = useContext(InputContext);\r\n  const { buffer, setBuffer } = useContext(BufferContext);\r\n\r\n  return (\r\n    <div className=\"layout__rectange\">\r\n      <table className=\"table\">\r\n        <tr>\r\n          {buffer && <Buffer buffer={buffer} />}\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <div className=\"input\">\r\n              <span>{input}</span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <table className=\"button-table\">\r\n            <tr>\r\n              <td>\r\n                <input\r\n                  type=\"button\"\r\n                  value=\"C\"\r\n                  className=\"num-button\"\r\n                  id=\"c-key\"\r\n                  onClick={() => {\r\n                    dispatchInput(clearInput());\r\n                    setBuffer('');\r\n                  }}\r\n                />\r\n              </td>\r\n              <OperationButton operation=\"/\" />\r\n              <OperationButton operation=\"×\" />\r\n              <OperationButton operation=\"⌫\" />\r\n            </tr>\r\n            <tr>\r\n              <NumberButton number={7} />\r\n              <NumberButton number={8} />\r\n              <NumberButton number={9} />\r\n              <OperationButton operation=\"-\" />\r\n            </tr>\r\n            <tr>\r\n              <NumberButton number={4} />\r\n              <NumberButton number={5} />\r\n              <NumberButton number={6} />\r\n              <OperationButton operation=\"+\" />\r\n            </tr>\r\n            <tr>\r\n              <NumberButton number={1} />\r\n              <NumberButton number={2} />\r\n              <NumberButton number={3} />\r\n              <OperationButton operation=\"( )\" />\r\n            </tr>\r\n            <tr>\r\n              <OperationButton operation=\"+/-\" />\r\n              <NumberButton number={0} />\r\n              <NumberButton number=\".\" />\r\n              <OperationButton operation=\"=\" />\r\n            </tr>\r\n          </table>\r\n        </tr>\r\n        <img\r\n          src=\"logo192.png\"\r\n          alt=\"React logo\"\r\n          className=\"layout__logo\"\r\n        />\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Calculator as default };\r\n","/* eslint-disable react/prop-types */\r\nimport React from 'react';\r\n\r\nconst Photographer = ({ photographer }) => (photographer && (\r\n<div className=\"unsplash-container\">\r\n  <span>Photo by &nbsp;</span>\r\n  {' '}\r\n  <a href={`${photographer.links.html}?utm_source=ReactCalculator&utm_medium=referral`} className=\"unsplash-container__link\">{photographer.name}</a>\r\n  {' '}\r\n  <span>&nbsp; on &nbsp;</span>\r\n  {' '}\r\n  <a href=\"https://unsplash.com/?utm_source=ReactCalculator&utm_medium=referral\" className=\"unsplash-container__link\">Unsplash</a>\r\n</div>\r\n));\r\n\r\nexport { Photographer as default };\r\n","import isOperation from '../util/operation';\r\n\r\n// eslint-disable-next-line consistent-return\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'APPEND_SYMBOL': {\r\n      const { symbol } = action;\r\n      if (state === '0') {\r\n        if (isOperation(symbol)) {\r\n          return ` ${state + action.symbol}`.trim();\r\n        }\r\n        return `${action.symbol}`;\r\n      } return ` ${state + action.symbol}`.trim();\r\n    }\r\n    case 'ERASE_ONE': {\r\n      const stateLength = `${state}`.length;\r\n      return `${state}` === '0' || stateLength === 1 ? '0' : `${state}`.substring(0, stateLength - 1);\r\n    }\r\n    case 'SET_INPUT':\r\n      return action.string;\r\n    case 'CLEAR_INPUT':\r\n      return '0';\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport { inputReducer as default };\r\n","import axios from 'axios';\r\n\r\nrequire('dotenv').config();\r\n\r\nconst apiUrl = `\r\nhttps://api.unsplash.com/photos/random?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}&orientation=landscape&query=Wallpaper+dark`;\r\n\r\nconst downloadLocation = (photoUrl) => `${photoUrl}?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}`;\r\n\r\nconst getRandomImage = () => new Promise((resolve, reject) => {\r\n  axios.get(apiUrl)\r\n    .then(({ data }) => {\r\n      resolve({ urls: data.urls, user: data.user });\r\n      axios.get(downloadLocation(data.links.download_location));\r\n    })\r\n    .catch((error) => reject(error));\r\n});\r\n\r\nexport { getRandomImage as default };\r\n","import React, { useReducer, useState, useEffect } from 'react';\r\nimport { useTransition, animated, config } from 'react-spring';\r\nimport Calculator from './Calculator';\r\nimport Photographer from './Photographer';\r\nimport InputContext from '../context/inputContext';\r\nimport BufferContext from '../context/bufferContext';\r\nimport inputReducer from '../reducers/inputReducer';\r\nimport getRandomImage from '../util/api';\r\n\r\nconst defaultImage = '/react-calculator/images/mojave-20.jpg';\r\n\r\nconst App = () => {\r\n  const [input, dispatchInput] = useReducer(inputReducer, '0');\r\n  const [buffer, setBuffer] = useState('');\r\n  const [operationClicked, setOperationClicked] = useState(false);\r\n  const [equalClicked, setEqualClicked] = useState(false);\r\n\r\n  const [background, setBackground] = useState(defaultImage);\r\n  const [photographer, setPhotographer] = useState(null);\r\n\r\n  const transitions = useTransition(background, null, {\r\n    from: { opacity: 0 },\r\n    enter: { opacity: 1 },\r\n    leave: { opacity: 0 },\r\n    config: config.molasses,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const storedImage = JSON.parse(localStorage.getItem('image'));\r\n    setBackground(storedImage ? storedImage.background : defaultImage);\r\n    setPhotographer(storedImage ? storedImage.photographer : null);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('image', JSON.stringify({ background, photographer }));\r\n  }, [background, photographer]);\r\n\r\n  const handleClick = async () => {\r\n    getRandomImage()\r\n      .then(({ urls, user }) => {\r\n        setBackground(urls.regular);\r\n        setPhotographer(user);\r\n      })\r\n      .catch(() => setBackground(defaultImage));\r\n  };\r\n  return (\r\n    <InputContext.Provider value={{\r\n      input,\r\n      dispatchInput,\r\n      operationClicked,\r\n      setOperationClicked,\r\n      equalClicked,\r\n      setEqualClicked,\r\n    }}\r\n    >\r\n      <BufferContext.Provider value={{ buffer, setBuffer }}>\r\n        {transitions.map(({ props, key }) => (\r\n          <animated.div className=\"layout\" key={key} style={{ ...props, backgroundImage: `url(${background})` }}>\r\n            <Calculator />\r\n            <button onClick={handleClick} className=\"button-background\" type=\"button\">Change background</button>\r\n            <Photographer photographer={photographer} />\r\n            <div className=\"github-container\">\r\n              <img src=\"github.png\" className=\"github-container__logo\" alt=\"Github logo\" />\r\n              <a href=\"https://github.com/awesomelike\" className=\"github-container__link\">@awesomelike</a>\r\n            </div>\r\n          </animated.div>\r\n        ))}\r\n\r\n      </BufferContext.Provider>\r\n    </InputContext.Provider>\r\n  );\r\n};\r\n\r\nexport { App as default };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/main.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\n\r\nconst BufferContext = React.createContext();\r\n\r\nexport { BufferContext as default };\r\n"],"sourceRoot":""}