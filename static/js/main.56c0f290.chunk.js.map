{"version":3,"sources":["actions/input.js","util/bracket.js","hooks/useOperationClick.js","util/operation.js","context/inputContext.js","serviceWorker.js","context/keyContext.js","hooks/useEqual.js","components/NumberButton.jsx","hooks/useNumberClick.js","components/OperationButton.jsx","components/Buffer.jsx","util/validKey.js","components/Calculator.jsx","components/Photographer.jsx","components/GithubContainer.jsx","reducers/inputReducer.js","util/api.js","components/App.jsx","index.js","context/bufferContext.js"],"names":["appendSymbol","symbol","type","eraseOne","setInput","string","clearInput","isValid","input","openBrackets","match","closedBrackets","length","countOpenBrackets","countClosedBrackets","useOperationClick","operation","useContext","InputContext","dispatchInput","setOperationClicked","equalClicked","setEqualClicked","BufferContext","setBuffer","handleClick","lastChar","slice","isPaired","isOperation","parseInt","substring","inputLength","validInput","fillBracketsCount","i","expression","replace","eval","error","includes","t","key","React","createContext","Boolean","window","location","hostname","KeyContext","useEqual","value","pressed","useState","equal","setEqual","useEffect","setTimeout","NumberButton","number","useNumberClick","onClick","className","style","backgroundColor","defaultProps","OperationButton","background","transform","Buffer","buffer","props","useSpring","from","opacity","marginTop","to","config","duration","p","Calculator","setPressed","handleKeydown","e","isNaN","validKey","handleKeyup","document","addEventListener","removeEventListener","Provider","id","src","alt","Photographer","photographer","transitions","map","div","href","links","html","name","GithubContainer","inputReducer","state","action","trim","stateLength","require","apiUrl","process","defaultImage","App","useReducer","operationClicked","setBackground","setPhotographer","setSrc","isLoading","setLoading","useTransition","filter","enter","leave","molasses","image","Image","onload","a","Promise","resolve","reject","axios","get","then","photoUrl","data","urls","user","download_location","catch","regular","storedImage","JSON","parse","localStorage","getItem","setItem","stringify","backgroundImage","disabled","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.56c0f290.chunk.js","sourcesContent":["export const appendSymbol = (symbol) => ({\n  type: 'APPEND_SYMBOL',\n  symbol,\n});\n\nexport const eraseOne = () => ({\n  type: 'ERASE_ONE',\n});\n\nexport const setInput = (string) => ({\n  type: 'SET_INPUT',\n  string,\n});\n\nexport const clearInput = () => ({\n  type: 'CLEAR_INPUT',\n});\n","const isValid = (input) => {\n  const openBrackets = `${input}`.match(/[(]/g);\n  const closedBrackets = `${input}`.match(/[)]/g);\n  if (!openBrackets) return true;\n  if (!!openBrackets && !!closedBrackets) return openBrackets.length === closedBrackets.length;\n  return false;\n};\n\nconst countOpenBrackets = (input) => `${input}`.match(/[(]/g).length;\nconst countClosedBrackets = (input) => {\n  const match = `${input}`.match(/[)]/g);\n  return (match !== null ? match.length : 0);\n};\nexport { isValid as default, countOpenBrackets, countClosedBrackets };\n","import { useContext } from 'react';\n\nimport isOperation from '../util/operation';\nimport InputContext from '../context/inputContext';\nimport BufferContext from '../context/bufferContext';\nimport { appendSymbol, setInput, eraseOne } from '../actions/input';\nimport isValid, { countOpenBrackets, countClosedBrackets } from '../util/bracket';\n\nconst useOperationClick = (operation) => {\n  const {\n    input, dispatchInput, setOperationClicked, equalClicked, setEqualClicked,\n  } = useContext(InputContext);\n  const { setBuffer } = useContext(BufferContext);\n\n  const handleClick = () => {\n    if (equalClicked) {\n      setEqualClicked(false);\n      setBuffer('');\n    }\n    const lastChar = `${input}`.slice(-1);\n    if (operation === '⌫') {\n      dispatchInput(eraseOne());\n    } else if (operation === '( )') {\n      const isPaired = isValid(input);\n      if (input === '0') dispatchInput(setInput('('));\n      else if (lastChar === '(') dispatchInput(appendSymbol('('));\n      else if (isPaired && (isOperation(lastChar) || lastChar === '(')) {\n        dispatchInput(appendSymbol('('));\n      } else if (isPaired && (!isOperation(lastChar) || lastChar === ')')) {\n        dispatchInput(appendSymbol('×('));\n      } else if (!isPaired) dispatchInput(appendSymbol(')'));\n    } else if (operation === '+/-') {\n      if (input === '0') dispatchInput(setInput('(-'));\n      else if (parseInt(input, 10) < 0) dispatchInput(setInput(`${-1 * parseInt(input, 10)}`));\n      else if (input === '(-') dispatchInput(setInput('0'));\n      else if (isOperation(lastChar) || lastChar === '(') dispatchInput(appendSymbol('(-'));\n      else dispatchInput(setInput(`(-${input}`));\n    } else {\n      if (operation !== '=') {\n        if (isOperation(lastChar) && lastChar !== operation) {\n          dispatchInput(setInput(input.substring(0, input.length - 1) + operation));\n        } else if (!isOperation(lastChar)) {\n          dispatchInput(appendSymbol(operation));\n        }\n      } else {\n        const inputLength = input.length;\n        let validInput;\n        if (isOperation(input[inputLength - 1])) {\n          validInput = input.substring(0, inputLength - 1);\n        } else validInput = input;\n        if (!isValid(input)) {\n          const fillBracketsCount = countOpenBrackets(input) - countClosedBrackets(input);\n          for (let i = 0; i < fillBracketsCount; i += 1) validInput += ')';\n        }\n        setBuffer(`${validInput}=`);\n\n        const expression = `${validInput}`.replace(/[×]/g, '*');\n\n        try {\n          dispatchInput(setInput(eval(expression)));\n        } catch (error) {\n          dispatchInput(setInput('Wrong format!'));\n        }\n        setEqualClicked(true);\n      }\n      setOperationClicked(true);\n    }\n  };\n  return handleClick;\n};\n\nexport { useOperationClick as default };\n","const isOperation = (symbol) => ['+', '-', '×', '/'].includes(symbol);\nconst t = (key) => {\n  switch (key) {\n    case '*':\n      return '×';\n    case '/':\n      return '/';\n    case '+':\n      return '+';\n    case '-':\n      return '-';\n    case 'Backspace':\n      return '⌫';\n    case 'Enter':\n      return '=';\n    case 'C':\n    case 'c':\n      return 'C';\n    case '(':\n    case ')':\n      return '( )';\n    default:\n      return key;\n  }\n};\nexport { isOperation as default, t };\n","import React from 'react';\n\nconst InputContext = React.createContext();\n\nexport { InputContext as default };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nconst KeyContext = React.createContext();\n\nexport { KeyContext as default };\n","import { useContext, useState, useEffect } from 'react';\nimport KeyContext from '../context/keyContext';\n\nconst useEqual = (value, handleClick) => {\n  const { pressed } = useContext(KeyContext);\n  const [equal, setEqual] = useState(false);\n\n  useEffect(() => {\n    if (pressed === value) {\n      handleClick();\n      setEqual(true);\n      setTimeout(() => {\n        setEqual(false);\n      }, 100);\n    }\n  }, [pressed]);\n\n  return equal;\n};\n\nexport { useEqual as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useNumberClick from '../hooks/useNumberClick';\nimport useEqual from '../hooks/useEqual';\n\nconst NumberButton = ({ number }) => {\n  const handleClick = useNumberClick(number);\n  const equal = useEqual(number, handleClick);\n\n  return (\n    <td>\n      <input\n        type=\"button\"\n        onClick={handleClick}\n        value={number}\n        className=\"num-button\"\n        style={equal ? {\n          backgroundColor: 'rgba(90, 90, 90, 0.527)',\n        } : {}}\n      />\n    </td>\n  );\n};\n\nNumberButton.propTypes = {\n  number: PropTypes.number,\n};\n\nNumberButton.defaultProps = {\n  number: 0,\n};\n\nexport { NumberButton as default };\n","import { useContext } from 'react';\nimport InputContext from '../context/inputContext';\nimport BufferContext from '../context/bufferContext';\nimport { appendSymbol, clearInput } from '../actions/input';\n\nconst useNumberClick = (number) => {\n  const {\n    dispatchInput, equalClicked, setEqualClicked,\n  } = useContext(InputContext);\n  const { setBuffer } = useContext(BufferContext);\n\n  const handleClick = () => {\n    if (equalClicked) {\n      dispatchInput(clearInput());\n      setBuffer('');\n      dispatchInput(appendSymbol(`${number}`));\n      setEqualClicked(false);\n    } else {\n      dispatchInput(appendSymbol(`${number}`));\n    }\n  };\n\n  return handleClick;\n};\n\nexport { useNumberClick as default };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useOperationClick from '../hooks/useOperationClick';\nimport useEqual from '../hooks/useEqual';\n\nconst OperationButton = ({ operation }) => {\n  const handleClick = useOperationClick(operation);\n  const equal = useEqual(operation, handleClick);\n\n  return (\n    <td>\n      <input\n        type=\"button\"\n        onClick={handleClick}\n        value={operation}\n        className={operation !== '+/-' ? 'num-button operation' : 'num-button'}\n        style={equal ? {\n          background: 'linear-gradient(to right, rgb(207, 134, 45), rgba(201, 131, 46, 0.15))',\n          transform: 'translateY(2px)',\n        } : {}}\n      />\n    </td>\n  );\n};\n\nOperationButton.defaultProps = {\n  operation: '+',\n};\n\nOperationButton.propTypes = {\n  operation: PropTypes.string,\n};\n\nexport { OperationButton as default };\n","import React from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport PropTypes from 'prop-types';\n\nconst Buffer = ({ buffer }) => {\n  const props = useSpring({\n    from: { opacity: 0, marginTop: -50 },\n    to: { opacity: 1, marginTop: -20 },\n    config: { duration: 250 },\n  });\n  return <td><animated.p className=\"buffer\" style={props}>{buffer}</animated.p></td>;\n};\n\nBuffer.defaultProps = {\n  buffer: '',\n};\n\nBuffer.propTypes = {\n  buffer: PropTypes.string,\n};\nexport { Buffer as default };\n","export default (key) => key.match(/[0-9]|[-+*/=.]|Enter|Backspace|C|[()]/);\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable consistent-return */\nimport React, { useContext, useEffect, useState } from 'react';\nimport NumberButton from './NumberButton';\nimport OperationButton from './OperationButton';\nimport Buffer from './Buffer';\nimport InputContext from '../context/inputContext';\nimport BufferContext from '../context/bufferContext';\nimport KeyContext from '../context/keyContext';\nimport { clearInput } from '../actions/input';\nimport validKey from '../util/validKey';\nimport { t } from '../util/operation';\n\nconst Calculator = () => {\n  const { input, dispatchInput } = useContext(InputContext);\n  const { buffer, setBuffer } = useContext(BufferContext);\n  const [pressed, setPressed] = useState('');\n\n  const handleKeydown = (e) => {\n    const key = !isNaN(parseInt(e.key, 10)) ? parseInt(e.key, 10) : e.key;\n    if (typeof key === 'number') {\n      setPressed(key);\n    } else if (validKey(key)) {\n      setPressed(t(key));\n    }\n  };\n\n  const handleKeyup = () => {\n    setPressed('');\n  };\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeydown);\n    return () => document.removeEventListener('keydown', handleKeydown);\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener('keyup', handleKeyup);\n    return () => document.removeEventListener('keyup', handleKeyup);\n  }, [input]);\n\n  return (\n    <KeyContext.Provider value={{ pressed }}>\n      <div className=\"layout__rectange\">\n        <table className=\"table\">\n          <tr>\n            {buffer && <Buffer buffer={buffer} />}\n          </tr>\n          <tr>\n            <td>\n              <div className=\"input\">\n                <span>{input}</span>\n              </div>\n            </td>\n          </tr>\n          <tr>\n            <table className=\"button-table\">\n              <tr>\n                <td>\n                  <input\n                    type=\"button\"\n                    value=\"C\"\n                    className=\"num-button\"\n                    id=\"c-key\"\n                    onClick={() => {\n                      dispatchInput(clearInput());\n                      setBuffer('');\n                    }}\n                  />\n                </td>\n                <OperationButton operation=\"/\" />\n                <OperationButton operation=\"×\" />\n                <OperationButton operation=\"⌫\" />\n              </tr>\n              <tr>\n                <NumberButton number={7} />\n                <NumberButton number={8} />\n                <NumberButton number={9} />\n                <OperationButton operation=\"-\" />\n              </tr>\n              <tr>\n                <NumberButton number={4} />\n                <NumberButton number={5} />\n                <NumberButton number={6} />\n                <OperationButton operation=\"+\" />\n              </tr>\n              <tr>\n                <NumberButton number={1} />\n                <NumberButton number={2} />\n                <NumberButton number={3} />\n                <OperationButton operation=\"( )\" />\n              </tr>\n              <tr>\n                <OperationButton operation=\"+/-\" />\n                <NumberButton number={0} />\n                <NumberButton number=\".\" />\n                <OperationButton operation=\"=\" />\n              </tr>\n            </table>\n          </tr>\n          <img\n            src=\"logo192.png\"\n            alt=\"React logo\"\n            className=\"layout__logo\"\n          />\n        </table>\n      </div>\n    </KeyContext.Provider>\n  );\n};\n\nexport { Calculator as default };\n","/* eslint-disable react/prop-types */\nimport React, { useContext } from 'react';\nimport { animated } from 'react-spring';\nimport InputContext from '../context/inputContext';\n\nconst Photographer = ({ photographer }) => {\n  const { transitions } = useContext(InputContext);\n\n  return transitions.map(({ props, key }) => (photographer && (\n    <animated.div className=\"unsplash-container\" key={key} style={{ ...props }}>\n      <span>Photo by &nbsp;</span>\n      {' '}\n      <a href={`${photographer.links.html}?utm_source=ReactCalculator&utm_medium=referral`} className=\"unsplash-container__link\">{photographer.name}</a>\n      {' '}\n      <span>&nbsp; on &nbsp;</span>\n      {' '}\n      <a href=\"https://unsplash.com/?utm_source=ReactCalculator&utm_medium=referral\" className=\"unsplash-container__link\">Unsplash</a>\n    </animated.div>\n  )));\n};\n\nexport { Photographer as default };\n","import React from 'react';\n\nconst GithubContainer = () => (\n  <div className=\"github-container\">\n    <img src=\"github.png\" className=\"github-container__logo\" alt=\"Github logo\" />\n    <a href=\"https://github.com/awesomelike\" className=\"github-container__link\">@awesomelike</a>\n  </div>\n);\n\nexport { GithubContainer as default };\n","import isOperation from '../util/operation';\n\n// eslint-disable-next-line consistent-return\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'APPEND_SYMBOL': {\n      const { symbol } = action;\n      if (state === '0') {\n        if (isOperation(symbol)) {\n          return ` ${state + action.symbol}`.trim();\n        }\n        return `${action.symbol}`;\n      } return ` ${state + action.symbol}`.trim();\n    }\n    case 'ERASE_ONE': {\n      const stateLength = `${state}`.length;\n      return `${state}` === '0' || stateLength === 1 ? '0' : `${state}`.substring(0, stateLength - 1);\n    }\n    case 'SET_INPUT':\n      return action.string;\n    case 'CLEAR_INPUT':\n      return '0';\n    default:\n      break;\n  }\n};\n\nexport { inputReducer as default };\n","import axios from 'axios';\n\nrequire('dotenv').config();\n\nconst apiUrl = `\nhttps://api.unsplash.com/photos/random?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}&orientation=landscape&query=Wallpaper+dark`;\n\nconst downloadLocation = (photoUrl) => `${photoUrl}?client_id=${process.env.REACT_APP_UNSPLASH_API_KEY}`;\n\nconst getRandomImage = () => new Promise((resolve, reject) => {\n  axios.get(apiUrl)\n    .then(({ data }) => {\n      resolve({ urls: data.urls, user: data.user });\n      axios.get(downloadLocation(data.links.download_location));\n    })\n    .catch((error) => reject(error));\n});\n\nexport { getRandomImage as default };\n","import React, { useReducer, useState, useEffect } from 'react';\nimport { useTransition, config } from 'react-spring';\nimport Calculator from './Calculator';\nimport Photographer from './Photographer';\nimport GithubContainer from './GithubContainer';\nimport InputContext from '../context/inputContext';\nimport BufferContext from '../context/bufferContext';\nimport inputReducer from '../reducers/inputReducer';\nimport getRandomImage from '../util/api';\n\nconst defaultImage = '/react-calculator/images/mojave-20.jpg';\n\nconst App = () => {\n  const [input, dispatchInput] = useReducer(inputReducer, '0');\n  const [buffer, setBuffer] = useState('');\n  const [operationClicked, setOperationClicked] = useState(false);\n  const [equalClicked, setEqualClicked] = useState(false);\n\n  const [background, setBackground] = useState(defaultImage);\n  const [photographer, setPhotographer] = useState(null);\n  const [src, setSrc] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n\n  const transitions = useTransition(isLoading, null, {\n    from: { filter: 'blur(1rem)' },\n    enter: { filter: 'blur(0)' },\n    leave: { filter: 'blur(1rem)' },\n    config: config.molasses,\n  });\n\n  const image = new Image();\n  image.onload = () => {\n    setBackground(src);\n    setLoading(false);\n  };\n  const handleClick = async () => {\n    setLoading(true);\n    getRandomImage()\n      .then(({ urls, user }) => {\n        setSrc(urls.regular);\n        setPhotographer(user);\n      })\n      .catch(() => {\n        setBackground(defaultImage);\n        setPhotographer(null);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    const storedImage = JSON.parse(localStorage.getItem('image'));\n    setBackground(storedImage ? storedImage.background : defaultImage);\n    setPhotographer(storedImage ? storedImage.photographer : null);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('image', JSON.stringify({ background, photographer }));\n  }, [background, photographer]);\n\n  useEffect(() => { image.src = src; }, [src]);\n\n  return (\n    <InputContext.Provider value={{\n      input,\n      dispatchInput,\n      operationClicked,\n      setOperationClicked,\n      equalClicked,\n      setEqualClicked,\n      transitions,\n      isLoading,\n    }}\n    >\n      <BufferContext.Provider value={{ buffer, setBuffer }}>\n        <div className=\"layout\" style={{ backgroundImage: `url(${background})` }}>\n          <Calculator />\n          <button onClick={handleClick} className=\"button-background\" type=\"button\" disabled={isLoading}>\n            {!isLoading ? 'Change background' : 'Loading...'}\n          </button>\n          <Photographer photographer={photographer} />\n          <GithubContainer />\n        </div>\n      </BufferContext.Provider>\n    </InputContext.Provider>\n  );\n};\n\nexport { App as default };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/main.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nconst BufferContext = React.createContext();\n\nexport { BufferContext as default };\n"],"sourceRoot":""}